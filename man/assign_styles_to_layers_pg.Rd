% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/styles.R
\name{assign_styles_to_layers_pg}
\alias{assign_styles_to_layers_pg}
\title{Assign Styles from a GeoPackage to a PostGIS Database (using an active connection)}
\usage{
assign_styles_to_layers_pg(
  from,
  conn,
  layers_to_copy = NULL,
  layer_name = NULL
)
}
\arguments{
\item{from}{A string representing the path to the source GeoPackage file.}

\item{conn}{A database connection object to the destination PostGIS database (an active `DBI` connection).}

\item{layers_to_copy}{An optional character vector specifying the names of layers
in the destination PostGIS database to which the styles should be applied.
If `NULL` (default), applies the style to all layers.}

\item{layer_name}{An optional string representing the name of the layer from the source
`layer_styles` whose style should be applied. If `NULL` (default), applies the
first style.}
}
\value{
The updated `layer_styles` table in PostGIS, returned invisibly.
}
\description{
This function copies the `layer_styles` from a source GeoPackage to a destination
PostGIS database, assigning the first style from the source to all layers in the
destination. A specific style can be selected based on the layer name from the source
GeoPackage. If no style is specified, the first style in the `layer_styles` table is applied.
}
\examples{
\dontrun{
# Paths to GeoPackage file
source_gpkg <- "source.gpkg"

# Connect to PostGIS database using an active connection
conn <- DBI::dbConnect(RPostgres::Postgres(),
                       dbname = "mydb", user = "myuser", host = "localhost", password = "mypassword")

# Assign styles to all layers using the first style
assign_styles_to_layers_pg(from = source_gpkg, conn = conn)

# Assign styles to specific layers using the first style
assign_styles_to_layers_pg(from = source_gpkg, conn = conn,
                         layers_to_copy = c("layer1", "layer2"))

# Assign a specific style based on layer name to all layers
assign_styles_to_layers_pg(from = source_gpkg, conn = conn,
                         layer_name = "layerX")

# Don't forget to disconnect the database connection after usage
DBI::dbDisconnect(conn)
}

}

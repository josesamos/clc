% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/styles.R
\name{assign_styles_to_layers_pg}
\alias{assign_styles_to_layers_pg}
\title{Assign Styles from a GeoPackage to a PostGIS Database (using an active connection)}
\usage{
assign_styles_to_layers_pg(
  from,
  conn,
  database,
  schema = "public",
  layers_to_copy = NULL,
  layer_name = NULL
)
}
\arguments{
\item{from}{A data source for the input styles. This can be:
- A string representing the path to a GeoPackage file.
- A `DBI` database connection object to a PostGIS database, created using [RPostgres::dbConnect()].}

\item{conn}{A database connection object to the destination PostGIS database.}

\item{database}{A string, database name.}

\item{schema}{A string, schema name.}

\item{layers_to_copy}{An optional character vector specifying the names of layers
in the destination PostGIS database to which the styles should be applied.
If `NULL` (default), applies the style to all layers.}

\item{layer_name}{An optional string representing the name of the layer from the source
`layer_styles` whose style should be applied. If `NULL` (default), applies the
first style.}
}
\value{
The updated `layer_styles` table in PostGIS, returned invisibly.
}
\description{
This function copies the `layer_styles` from a source GeoPackage to a destination
PostGIS database, assigning the first style from the source to all layers in the
destination. A specific style can be selected based on the layer name from the source
GeoPackage. If no style is specified, the first style in the `layer_styles` table is applied.
}
\examples{
\dontrun{
source_gpkg <- "source.gpkg"
conn <- RPostgres::dbConnect(
  RPostgres::Postgres(),
  dbname = 'exampledb',
  host = 'localhost',
  port = '5432',
  user = 'postgres',
  password = 'postgres'
)

# Assign styles to all layers using the first style
assign_styles_to_layers_pg(from = source_gpkg, conn = conn)

# Assign styles to specific layers using the first style
assign_styles_to_layers_pg(from = source_gpkg, conn = conn,
                        layers_to_copy = c("layer1", "layer2"))

# Assign a specific style based on layer name to all layers
assign_styles_to_layers_pg(from = source_gpkg, conn = conn,
                        layer_name = "layerX")

RPostgres::dbDisconnect(conn)


source_conn <- RPostgres::dbConnect(
  RPostgres::Postgres(),
  dbname = 'exampledb1',
  host = 'localhost',
  port = '5432',
  user = 'postgres',
  password = 'postgres'
)
conn <- RPostgres::dbConnect(
  RPostgres::Postgres(),
  dbname = 'exampledb2',
  host = 'localhost',
  port = '5432',
  user = 'postgres',
  password = 'postgres'
)

# Assign styles to all layers using the first style
assign_styles_to_layers_pg(from = source_conn, conn = conn)

# Assign styles to specific layers using the first style
assign_styles_to_layers_pg(from = source_conn, conn = conn,
                        layers_to_copy = c("layer1", "layer2"))

# Assign a specific style based on layer name to all layers
assign_styles_to_layers_pg(from = source_conn, conn = conn,
                        layer_name = "layerX")

RPostgres::dbDisconnect(source_conn)
RPostgres::dbDisconnect(conn)
}

}

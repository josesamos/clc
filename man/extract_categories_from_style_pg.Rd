% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/categor.R
\name{extract_categories_from_style_pg}
\alias{extract_categories_from_style_pg}
\title{Extract Categories from a PostGIS Database Style Layer}
\usage{
extract_categories_from_style_pg(conn, r_clc, layer_name = NULL)
}
\arguments{
\item{conn}{A database connection object to the destination PostGIS database (an active `DBI` connection).}

\item{r_clc}{A `terra` raster object containing the land cover data.}

\item{layer_name}{An optional string representing the name of the layer from the source
`layer_styles` whose style should be applied. If `NULL` (default), applies the
first style.}
}
\value{
A data frame (`categories`) containing the category IDs, descriptions,
and associated colors for the values present in the raster.
The data frame has three columns: `ID`, `Descripcion` (Description), and `Color` (HEX color codes).
}
\description{
This function extracts the categories (labels and associated colors) from the `layer_styles`
table of a PostGIS database. The style information is used to create a mapping between
category IDs, descriptions, and colors for a given raster layer.
}
\details{
The function will use the style for the specified layer name, or if no name is
provided, it defaults to using the first style in the `layer_styles` table.
}
\examples{
\dontrun{
# Connect to PostGIS database
conn <- DBI::dbConnect(RPostgres::Postgres(),
                       dbname = "mydb", user = "myuser", host = "localhost", password = "mypassword")

# Load the raster layer (e.g., CORINE Land Cover)
library(terra)
r_clc <- rast("clc_raster.tif")

# Extract categories for a specific layer from PostGIS
categories_pg <- extract_categories_from_style_pg(conn = conn, r_clc = r_clc)
DBI::dbDisconnect(conn)
}

}
\seealso{
Other transformation functions: 
\code{\link{extract_categories_from_style}()},
\code{\link{safe_clip_multipolygon}()}
}
\concept{transformation functions}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/categor.R
\name{extract_categories_from_style}
\alias{extract_categories_from_style}
\title{Extract Categories from a Style Layer in a GeoPackage Based on Layer Name}
\usage{
extract_categories_from_style(from, r_clc, layer_name = NULL)
}
\arguments{
\item{from}{A data source for the input styles. This can be:
- A string representing the path to a GeoPackage file.
- A `DBI` database connection object to a PostGIS database, created using [RPostgres::dbConnect()].}

\item{r_clc}{A `terra` raster object containing the land cover data.}

\item{layer_name}{An optional string representing the name of the layer from the source
`layer_styles` whose style should be applied. If `NULL` (default), applies the
first style.}
}
\value{
A data frame containing the category IDs, descriptions, and associated
colors for the values present in the raster.
The data frame has three columns: `id`, `description`, and `color` (HEX color codes).
}
\description{
This function extracts the categories (labels and associated colors) from the
`layer_styles` layer of a GeoPackage. The style information is used to create
a mapping between category IDs, descriptions, and colors for a given raster layer.
}
\details{
The function will use the style for the specified layer name, or if no name is
provided, it defaults to using the first style in the `layer_styles` table.
}
\examples{
\dontrun{
# Path to GeoPackage file
source_gpkg <- "source.gpkg"

# Load the raster layer (e.g., CORINE Land Cover)
library(terra)
r_clc <- rast("clc_raster.tif")

# Extract categories from the GeoPackage style layer and the raster
categories <- extract_categories_from_style(from = source_gpkg, r_clc = r_clc)

# Extract categories for a specific layer
categories_layerX <- extract_categories_from_style(from = source_gpkg, r_clc = r_clc, layer_name = "layerX")
}

}
\seealso{
Other transformation functions: 
\code{\link{safe_clip_multipolygon}()}
}
\concept{transformation functions}

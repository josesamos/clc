% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/categor.R
\name{extract_categories_from_style}
\alias{extract_categories_from_style}
\title{Extract Categories from a Style Layer Based on Layer Name}
\usage{
extract_categories_from_style(from, layer_name = NULL, values = NULL)
}
\arguments{
\item{from}{A data source for the input styles. This can be:
- A string representing the path to a GeoPackage file.
- A `DBI` database connection object to a PostGIS database, created using [RPostgres::dbConnect()].}

\item{layer_name}{An optional string representing the name of the layer from the source
`layer_styles` whose style should be applied. If `NULL` (default), applies the
first style.}

\item{values}{The set of values used to filter the results; filtering is applied only if this set
is not NULL.}
}
\value{
A data frame containing the category IDs, descriptions, and associated
colors for the values present in the raster.
The data frame has three columns: `id`, `description`, and `color` (HEX color codes).
}
\description{
This function extracts the categories (labels and associated colors) from the
`layer_styles` layer of a GeoPackage or PostGIS database. The style information
is used to create a mapping between category IDs, descriptions, and colors.
}
\details{
The function will use the style for the specified layer name, or if no name is
provided, it defaults to using the first style in the `layer_styles` table.

The result can be filtered by considering only the specified values, provided
a set other than NULL is assigned to the `values` variable.
}
\examples{

gpkg_path <- system.file("extdata", "clc.gpkg", package = "clc")

categories <- extract_categories_from_style(from = gpkg_path)

categories <- extract_categories_from_style(from = gpkg_path, layer_name = "clc")

categories <- extract_categories_from_style(from = gpkg_path,
  values = c(111, 211, 311))

categories <- extract_categories_from_style(from = gpkg_path, layer_name = "clc",
  values = c(111, 211, 311))

\dontrun{
conn <- RPostgres::dbConnect(
  RPostgres::Postgres(),
  dbname = 'exampledb',
  host = 'localhost',
  port = '5432',
  user = 'postgres',
  password = 'postgres'
)

categories <- extract_categories_from_style(from = conn)

categories <- extract_categories_from_style(from = conn, layer_name = "clc")

categories <- extract_categories_from_style(from = conn,
  values = c(111, 211, 311))

categories <- extract_categories_from_style(from = conn, layer_name = "clc",
  values = c(111, 211, 311))
}

}
